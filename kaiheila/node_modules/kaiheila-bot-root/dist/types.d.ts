import { KHAuthor, KHTextMessage, KHEventBase, KHImageMessage, KHAttachment, KHVideoAttachment, KHVideoMessage, KHFileAttachment, KHFileMessage, KHAudioAttachment, KHKMarkDownMessage, KHAudioMessage } from './kaiheila.type';
export declare enum MessageType {
    text = 1,
    image = 2,
    video = 3,
    file = 4,
    voice = 8,
    kmarkdown = 9
}
export declare class User {
    /**
     * 用户名 # 后的 4 位识别 id
     */
    identifyNum: string;
    /**
     * 头像图片地址
     */
    avatar: string;
    /**
     * 是否为机器人
     */
    bot: boolean;
    /**
     * 用户名
     */
    username: string;
    /**
     * 用户id
     */
    id: string;
    /**
     * 用户在服务器的昵称
     */
    nickname: string;
    /**
     * 用户在当前服务器中的角色 id 组成的列表
     */
    roles: number[];
    /**
     * 是否在线
     */
    online: boolean;
    constructor(rawAuthor?: KHAuthor | User);
}
export declare class MessageBase {
    /**
     * 消息类型
     */
    type: MessageType;
    msgId: string;
    msgTimestamp: number;
    channelId: string;
    guildId: string;
    channelType: string;
    authorId: string;
    constructor(message: KHEventBase);
}
export declare class Attachment {
    name: string;
    type: string;
    url: string;
    constructor(attachment: KHAttachment);
}
export declare class TextMessage extends MessageBase {
    type: MessageType;
    author: User;
    quote?: TextMessage;
    channelName?: string;
    code: string;
    content: string;
    mention: {
        user: string[];
        roles: string[];
        all: boolean;
        here: boolean;
    };
    constructor(message: KHTextMessage);
}
export declare class ImageAttachment extends Attachment {
    type: string;
}
export declare class ImageMessage extends MessageBase {
    type: MessageType;
    code: string;
    content: string;
    author: User;
    attachment: ImageAttachment;
    constructor(message: KHImageMessage);
}
export declare class VideoAttachment extends Attachment {
    type: string;
    size: number;
    fileType: string;
    height: number;
    width: number;
    duration: number;
    constructor(attachment: KHVideoAttachment);
}
export declare class VideoMessage extends MessageBase {
    type: MessageType;
    attachment: VideoAttachment;
    author: User;
    constructor(message: KHVideoMessage);
}
export declare class FileAttachment extends Attachment {
    type: string;
    fileType: string;
    size: number;
    constructor(attchement: KHFileAttachment);
}
export declare class FileMesage extends MessageBase {
    type: MessageType;
    attachment: FileAttachment;
    author: User;
    constructor(message: KHFileMessage);
}
/**
 * 音频附件
 *
 * 注意，这是唯一个不从Attachment类扩展出来的附件
 */
export declare class AudioAttachment {
    type: string;
    mimeType: string;
    voice: string;
    duration: number;
    name: string;
    constructor(attachment: KHAudioAttachment);
    get url(): string;
}
export declare class AudioMessage extends MessageBase {
    type: MessageType;
    attachment: AudioAttachment;
    author: User;
    constructor(message: KHAudioMessage);
}
export declare class KMarkDownMessage extends MessageBase {
    type: MessageType;
    author: User;
    mention: {
        user: string[];
        roles: string[];
        all: boolean;
        here: boolean;
        channels: string[];
    };
    channelName: string;
    content: string;
    code: string;
    constructor(message: KHKMarkDownMessage);
}
